{
  "version": 3,
  "sources": ["../../lib/submitImage.ts"],
  "sourcesContent": ["// Import the necessary library for sending HTTP requests\nimport axios from \"axios\";\n\n// Create an interface to define the expected response structure for the submitImage API call\ninterface SubmitImageResponse {\n  remixId: string;\n}\n\n// This function submits an image file (Blob) and an associated prompt to the /api/submit-remix endpoint\n// If successful, it returns the unique remixId for the submitted image\n// In case of an error, it returns null\nexport async function submitImage(\n  blob: Blob,\n  prompt: string\n): Promise<string | null> {\n  try {\n    // Create a FormData instance to hold the image file and prompt\n    const formData = new FormData();\n    formData.append(\"image\", blob); // Add the image Blob to the form data\n    formData.append(\"prompt\", prompt); // Add the prompt to the form data\n\n    // Configure and send a POST request to the /api/submit-remix endpoint with the FormData object\n    // The 'Content-Type' header is set to 'multipart/form-data' for submitting the form data\n    const response = await axios.post<SubmitImageResponse>(\n      \"/api/submit-remix\",\n      formData,\n      {\n        headers: { \"Content-Type\": \"multipart/form-data\" },\n      }\n    );\n\n    // Return the unique remixId for the submitted image if the request is successful\n    return response.data.remixId;\n  } catch (error: unknown) {\n    // Handle errors that occur during the submission process without logging\n    // This improves user experience, as console logs are removed in the cleaned-up code\n    if (error instanceof Error) {\n      return null;\n    }\n    return null;\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,mBAAkB;AAUlB,eAAsB,YACpB,MACA,QACwB;AACxB,MAAI;AAEF,UAAM,WAAW,IAAI,SAAS;AAC9B,aAAS,OAAO,SAAS,IAAI;AAC7B,aAAS,OAAO,UAAU,MAAM;AAIhC,UAAM,WAAW,MAAM,aAAAA,QAAM;AAAA,MAC3B;AAAA,MACA;AAAA,MACA;AAAA,QACE,SAAS,EAAE,gBAAgB,sBAAsB;AAAA,MACnD;AAAA,IACF;AAGA,WAAO,SAAS,KAAK;AAAA,EACvB,SAAS,OAAP;AAGA,QAAI,iBAAiB,OAAO;AAC1B,aAAO;AAAA,IACT;AACA,WAAO;AAAA,EACT;AACF;",
  "names": ["axios"]
}
