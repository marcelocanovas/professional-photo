{
  "version": 3,
  "sources": ["../../lib/resizer.ts"],
  "sourcesContent": ["import Resizer from \"react-image-file-resizer\";\n\n// Function to resize an image file that accepts a file as input\nexport const resizeFile = (file: File) => {\n  // Create a new Promise to handle the resized image\n  return new Promise<string | File | Blob | ProgressEvent<FileReader>>(\n    (resolve) => {\n      // Calls the imageFileResizer function from the 'react-image-file-resizer' library\n      Resizer.imageFileResizer(\n        file, // File - the input image file to be resized\n        1000, // maxWidth - the maximum width of the resized image\n        1000, // maxHeight - the maximum height of the resized image\n        \"JPEG\", // Output format - use 'JPEG' for JPEG images\n        100, // Quality - image quality (0 - 100) where 100 is the highest\n        0, // Rotation - sets the rotation of the resized image (0 - no rotation)\n        (blob) => {\n          resolve(blob); // Callback function called once the image is resized, resolves the Promise with the resized image\n        },\n        \"blob\" // Output type - indicates the format of the resized image to be returned ('file', 'base64', or 'blob')\n      );\n    }\n  );\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAoB;AAGb,MAAM,aAAa,CAAC,SAAe;AAExC,SAAO,IAAI;AAAA,IACT,CAAC,YAAY;AAEX,sCAAAA,QAAQ;AAAA,QACN;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA,CAAC,SAAS;AACR,kBAAQ,IAAI;AAAA,QACd;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF;",
  "names": ["Resizer"]
}
