{
  "version": 3,
  "sources": ["../../../../app/api/check-remix-status/route.ts"],
  "sourcesContent": ["import { NextResponse } from \"next/server\";\n\nexport const runtime = \"edge\";\n\nexport async function GET(request: Request) {\n  const { searchParams } = new URL(request.url);\n  const modelId = searchParams.get(\"modelId\");\n  const remixId = searchParams.get(\"remixId\");\n\n  const apiUrl = `https://api.tryleap.ai/api/v1/images/models/${modelId}/remix/${remixId}`;\n\n  try {\n    const response = await fetch(apiUrl, {\n      headers: {\n        Authorization: `Bearer ${process.env.LEAP_API_KEY}`,\n      },\n    });\n\n    if (!response.ok) {\n      return NextResponse.json(\n        { error: `Request failed with status ${response.status}` },\n        { status: response.status }\n      );\n    }\n\n    const jsonResponse = await response.json();\n    return NextResponse.json(jsonResponse);\n  } catch (error: unknown) {\n    if (error instanceof Error) {\n      console.error(\"Error while checking the remix status:\", error.message);\n      return NextResponse.json({ error: error.message }, { status: 500 });\n    }\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA6B;AAEtB,MAAM,UAAU;AAEvB,eAAsB,IAAI,SAAkB;AAC1C,QAAM,EAAE,aAAa,IAAI,IAAI,IAAI,QAAQ,GAAG;AAC5C,QAAM,UAAU,aAAa,IAAI,SAAS;AAC1C,QAAM,UAAU,aAAa,IAAI,SAAS;AAE1C,QAAM,SAAS,+CAA+C,iBAAiB;AAE/E,MAAI;AACF,UAAM,WAAW,MAAM,MAAM,QAAQ;AAAA,MACnC,SAAS;AAAA,QACP,eAAe,UAAU,QAAQ,IAAI;AAAA,MACvC;AAAA,IACF,CAAC;AAED,QAAI,CAAC,SAAS,IAAI;AAChB,aAAO,2BAAa;AAAA,QAClB,EAAE,OAAO,8BAA8B,SAAS,SAAS;AAAA,QACzD,EAAE,QAAQ,SAAS,OAAO;AAAA,MAC5B;AAAA,IACF;AAEA,UAAM,eAAe,MAAM,SAAS,KAAK;AACzC,WAAO,2BAAa,KAAK,YAAY;AAAA,EACvC,SAAS,OAAP;AACA,QAAI,iBAAiB,OAAO;AAC1B,cAAQ,MAAM,0CAA0C,MAAM,OAAO;AACrE,aAAO,2BAAa,KAAK,EAAE,OAAO,MAAM,QAAQ,GAAG,EAAE,QAAQ,IAAI,CAAC;AAAA,IACpE;AAAA,EACF;AACF;",
  "names": []
}
