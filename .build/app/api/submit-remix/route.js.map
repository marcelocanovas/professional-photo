{
  "version": 3,
  "sources": ["../../../../app/api/submit-remix/route.ts"],
  "sourcesContent": ["import { NextResponse } from \"next/server\";\n\nexport const runtime = \"edge\";\n\nasync function createFormData(image: File, prompt: string) {\n  const formData = new FormData();\n  formData.append(\"files\", image);\n  formData.append(\"prompt\", prompt || \"A hand-drawn sketch\");\n  formData.append(\n    \"negativePrompt\",\n    \"watermark, blurry, low-res, low contrast, desaturated\"\n  );\n  formData.append(\"mode\", \"canny\");\n  formData.append(\"numberOfImages\", \"4\");\n\n  return formData;\n}\n\nasync function postImageToApi(formData: FormData) {\n  const modelId = \"1e7737d7-545e-469f-857f-e4b46eaa151d\";\n  const apiUrl = `https://api.tryleap.ai/api/v1/images/models/${modelId}/remix`;\n\n  const response = await fetch(apiUrl, {\n    method: \"POST\",\n    body: formData,\n    headers: {\n      Authorization: `Bearer ${process.env.LEAP_API_KEY}`,\n    },\n  });\n\n  if (!response.ok) {\n    throw new Error(`API request failed with status ${response.status}`);\n  }\n\n  const jsonResponse = await response.json();\n  const remixId = jsonResponse.id;\n\n  if (!remixId) {\n    throw new Error(\"Remix ID not found in API response\");\n  }\n\n  return remixId;\n}\n\nexport async function POST(request: Request) {\n  // Get the incoming image from form data\n\n  const incomingFormData = await request.formData();\n  const image = incomingFormData.get(\"image\") as File | null;\n  const prompt = incomingFormData.get(\"prompt\") as string | null;\n\n  if (!image) {\n    return NextResponse.json(\n      { error: \"No image found in request\" },\n      { status: 400 }\n    );\n  }\n\n  if (!prompt) {\n    return NextResponse.json(\n      { error: \"No prompt found in request\" },\n      { status: 400 }\n    );\n  }\n\n  let remixId;\n  try {\n    const formData = await createFormData(image, prompt);\n    remixId = await postImageToApi(formData);\n  } catch (error: unknown) {\n    if (error instanceof Error) {\n      console.error(\n        \"Error while making request to external API:\",\n        error.message\n      );\n      return NextResponse.json({ error: error.message }, { status: 500 });\n    }\n  }\n\n  return NextResponse.json({ remixId });\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA6B;AAEtB,MAAM,UAAU;AAEvB,eAAe,eAAe,OAAa,QAAgB;AACzD,QAAM,WAAW,IAAI,SAAS;AAC9B,WAAS,OAAO,SAAS,KAAK;AAC9B,WAAS,OAAO,UAAU,UAAU,qBAAqB;AACzD,WAAS;AAAA,IACP;AAAA,IACA;AAAA,EACF;AACA,WAAS,OAAO,QAAQ,OAAO;AAC/B,WAAS,OAAO,kBAAkB,GAAG;AAErC,SAAO;AACT;AAEA,eAAe,eAAe,UAAoB;AAChD,QAAM,UAAU;AAChB,QAAM,SAAS,+CAA+C;AAE9D,QAAM,WAAW,MAAM,MAAM,QAAQ;AAAA,IACnC,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,SAAS;AAAA,MACP,eAAe,UAAU,QAAQ,IAAI;AAAA,IACvC;AAAA,EACF,CAAC;AAED,MAAI,CAAC,SAAS,IAAI;AAChB,UAAM,IAAI,MAAM,kCAAkC,SAAS,QAAQ;AAAA,EACrE;AAEA,QAAM,eAAe,MAAM,SAAS,KAAK;AACzC,QAAM,UAAU,aAAa;AAE7B,MAAI,CAAC,SAAS;AACZ,UAAM,IAAI,MAAM,oCAAoC;AAAA,EACtD;AAEA,SAAO;AACT;AAEA,eAAsB,KAAK,SAAkB;AAG3C,QAAM,mBAAmB,MAAM,QAAQ,SAAS;AAChD,QAAM,QAAQ,iBAAiB,IAAI,OAAO;AAC1C,QAAM,SAAS,iBAAiB,IAAI,QAAQ;AAE5C,MAAI,CAAC,OAAO;AACV,WAAO,2BAAa;AAAA,MAClB,EAAE,OAAO,4BAA4B;AAAA,MACrC,EAAE,QAAQ,IAAI;AAAA,IAChB;AAAA,EACF;AAEA,MAAI,CAAC,QAAQ;AACX,WAAO,2BAAa;AAAA,MAClB,EAAE,OAAO,6BAA6B;AAAA,MACtC,EAAE,QAAQ,IAAI;AAAA,IAChB;AAAA,EACF;AAEA,MAAI;AACJ,MAAI;AACF,UAAM,WAAW,MAAM,eAAe,OAAO,MAAM;AACnD,cAAU,MAAM,eAAe,QAAQ;AAAA,EACzC,SAAS,OAAP;AACA,QAAI,iBAAiB,OAAO;AAC1B,cAAQ;AAAA,QACN;AAAA,QACA,MAAM;AAAA,MACR;AACA,aAAO,2BAAa,KAAK,EAAE,OAAO,MAAM,QAAQ,GAAG,EAAE,QAAQ,IAAI,CAAC;AAAA,IACpE;AAAA,EACF;AAEA,SAAO,2BAAa,KAAK,EAAE,QAAQ,CAAC;AACtC;",
  "names": []
}
